import betgrab
import telepot
from telepot.loop import MessageLoop
from telepot.namedtuple import InlineKeyboardMarkup, ReplyKeyboardMarkup
from random import choice
from time import sleep
import json

TOKEN = '844914308:AAGaJiIHBTV8d-84DgZbRsDU7qQO_8WFSvE'
PROXY = 'https://185.80.130.17:80'
GROUP = '-1001494021764'
OFFER = 'http://tr.delaidelami.ru/click?pid=1379&offer_id=132'

authorized_admins = []
admin_statuses = {}

with open('messages.json', 'r', encoding='utf-8-sig') as f:
	MESSAGES = json.load(f)

def updatemessages(typo, text):
	with open('messages.json', 'w', encoding='utf-8-sig') as f:
		if typo == 1:
			MESSAGES['betinfo'].append(text)
		elif typo == 2:
			MESSAGES['morning'].append(text)
		elif typo == 3:
			MESSAGES['evening'].append(text)
		f.write(json.dumps(MESSAGES, ensure_ascii=False, sort_keys=True, indent=4))

def viewmessage(chat_id, view):
	bot.sendMessage(chat_id, '–í–æ—Ç —Ç–∞–∫–∏–µ –≤–æ—Ç –ø–∏—Ä–æ–≥–∏ü•û')
	for index, v in enumerate(MESSAGES[view]):
		bot.sendMessage(chat_id, v, reply_markup=InlineKeyboardMarkup(inline_keyboard=[[dict(text='–£–¥–∞–ª–∏—Ç—å‚ôªÔ∏è', callback_data='delete_{0}_{1}'.format(view, index))]]))

def on_callback(msg):
	query_id, from_id, data = telepot.glance(msg, flavor='callback_query')
	if 'delete' in data:
		data = data.split('_')
		with open('messages.json', 'w', encoding='utf-8-sig') as f:
			MESSAGES[data[1]].pop(int(data[2]))
			f.write(json.dumps(MESSAGES, ensure_ascii=False, sort_keys=True, indent=4))
		bot.sendMessage(from_id, '–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!')

def chat(msg):
	content_type, chat_type, chat_id = telepot.glance(msg)
	if msg['text'] == "–ë–ï–¢–ë–û–¢123":
		authorized_admins.append(chat_id)
		admin_statuses[chat_id] = 'idle'
		bot.sendMessage(chat_id, "–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!üõê", reply_markup=ReplyKeyboardMarkup(keyboard=[["–°–æ–æ–±—â–µ–Ω–∏—èüì≤"],['–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚è∞']]))
	else:
		if chat_id in authorized_admins:
			if msg['text'] == "–°–æ–æ–±—â–µ–Ω–∏—èüì≤":
				bot.sendMessage(chat_id,
				 "–í –¥–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –µ—Å—Ç—å:\n\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏üí¥ - {0}\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –¥–Ω–µ–ºüåÑ - {1}\n–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤–µ—á–µ—Ä–æ–ºüåá - {2}".format(
				 	len(MESSAGES['betinfo']), len(MESSAGES['morning']), len(MESSAGES['evening'])), reply_markup=ReplyKeyboardMarkup(keyboard=[
				 	['–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é‚úÖ', '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—åüëÅ‚Äçüó®']]))

			elif msg['text'] == '–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—åüëÅ‚Äçüó®':
				bot.sendMessage(chat_id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, –º–∏–ª–æ—Ä–¥?üñïüèæ", reply_markup=ReplyKeyboardMarkup(keyboard=[
					['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏üí¥'],['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–Ω–µ–ºüåÑ'],['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–µ—á–µ—Ä–æ–ºüåá']]))
				admin_statuses[chat_id] = 'view'

			elif msg['text'] == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏üí¥' and admin_statuses[chat_id] == 'view':
				viewmessage(chat_id, 'betinfo')

			elif msg['text'] == '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–Ω–µ–ºüåÑ' and admin_statuses[chat_id] == 'view':
				viewmessage(chat_id, 'morning')

			elif msg['text'] == '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–µ—á–µ—Ä–æ–ºüåá' and admin_statuses[chat_id] == 'view':
				viewmessage(chat_id, 'evening')



			elif msg['text'] == "–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é‚úÖ":
				admin_statuses[chat_id] = 'messages'
				bot.sendMessage(chat_id, "–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å, –º–∏–ª–æ—Ä–¥?üñïüèæ", reply_markup=ReplyKeyboardMarkup(keyboard=[
					['–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏üí¥'],['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–Ω–µ–ºüåÑ'],['–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–µ—á–µ—Ä–æ–ºüåá']]))

			elif msg['text'] == '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å—Ç–∞–≤–∫–∏üí¥' and admin_statuses[chat_id] == 'messages':
				bot.sendMessage(chat_id, "–ü–∏—à–∏—Ç–µ.\n–ù–æ –æ–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ.\n\n{0} - –¥–∞—Ç–∞\n{1} - —Ç—ç–≥–∏\n{2} - –ø–µ—Ä–≤–∞—è –∫–æ–º–∞–Ω–¥–∞\n{3} - –≤—Ç–æ—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞\n{4} - –ø—Ä–æ–≥–Ω–æ–∑")
				admin_statuses[chat_id] = 'typo1'

			elif msg['text'] == '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–Ω–µ–ºüåÑ' and admin_statuses[chat_id] == 'messages':
				bot.sendMessage(chat_id, "–ü–∏—à–∏—Ç–µ.")
				admin_statuses[chat_id] = 'typo2'

			elif msg['text'] == '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤–µ—á–µ—Ä–æ–ºüåá' and admin_statuses[chat_id] == 'messages':
				bot.sendMessage(chat_id, "–ü–∏—à–∏—Ç–µ.")
				admin_statuses[chat_id] = 'typo3'



			elif msg['text'] == '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚è∞':
				pass


			else:
				if admin_statuses[chat_id] == 'typo1':
					updatemessages(1, msg['text'])
				if admin_statuses[chat_id] == 'typo2':
					updatemessages(2, msg['text'])
				if admin_statuses[chat_id] == 'typo3':
					updatemessages(3, msg['text'])
				admin_statuses[chat_id] = 'idle'
				bot.sendMessage(chat_id, "–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∞!üõê", reply_markup=ReplyKeyboardMarkup(keyboard=[["–°–æ–æ–±—â–µ–Ω–∏—èüì≤"],['–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ‚è∞']]))

def sendbets():
	bets = betgrab.grab()
	for bet in bets:
		markup = InlineKeyboardMarkup(inline_keyboard=[[dict(text='–ü–æ—Å—Ç–∞–≤–∏—Ç—åüí∏', url=OFFER)]])
		bot.sendPhoto(GROUP, photo=bet['pfc'])
		bot.sendPhoto(GROUP, photo=bet['psc'])
		bot.sendMessage(GROUP, choice(MESSAGES['betinfo']).format(bet['date'], bet['tags'], bet['first_command'], bet['second_command'], bet['prediction']),reply_markup=markup)
		# {0} - –¥–∞—Ç–∞ {1} - —Ç—ç–≥–∏ {2} - –ø–µ—Ä–≤–∞—è –∫–æ–º–∞–Ω–¥–∞ {3} - –≤—Ç–æ—Ä–∞—è –∫–æ–º–∞–Ω–¥–∞ {4} - –ø—Ä–æ–≥–Ω–æ–∑

#telepot.api.set_proxy(PROXY)
bot = telepot.Bot(TOKEN)
MessageLoop(bot, {'callback_query': on_callback, 'chat': chat}).run_as_thread()
while True:
	sendbets()
	print('–ó–∞—Å—ã–ø–∞–µ–º –Ω–∞ 1.5 –º–∏–Ω—É—Ç—ã')
	sleep(100000)